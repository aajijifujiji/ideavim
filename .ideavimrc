
" ================================================================================================
" = Extensions =====================================
" ================================================================================================
Plug 'easymotion/vim-easymotion'
Plug 'preservim/nerdtree'
Plug 'terryma/vim-multiple-cursors'
Plug 'tpope/vim-commentary'
Plug 'vim-scripts/ReplaceWithRegister'
Plug 'vim-scripts/argtextobj.vim'
Plug 'tommcdo/vim-exchange'
Plug 'kana/vim-textobj-entire'
Plug 'machakann/vim-highlightedyank'
Plug 'dbakker/vim-paragraph-motion'
Plug 'michaeljsmith/vim-indent-object'
Plug 'vim-matchit'
Plug 'tpope/vim-surround'
"packadd matchit


" leader: <space> "\" 转义符号
" let mapleader = "\<space>"
let mapleader=' '
" let mapleader=','
" 映射idea常用快捷键
set rnu
set nu
set surround " surround
set multiple-cursors " multiple-cursors
set easymotion " easyMotion 模拟，额外依赖插件：AceJump,IdeaVim-EasyMotion
set AceJump
set commentary " 注释插件模拟
"set keep-english-in-normal[-and-restore-in-insert] " 设置ideaVimExtension插件,自动切换输入法
set keep-english-in-normal " 设置ideaVimExtension插件,自动切换输入法
set NERDTree
set <leader>e :NERDTreeToggle<CR>

set encoding=utf-8
scriptencoding utf-8
set showmatch "自动匹配
set ruler "在右下角显示当前行信息
set history=1000 "历史记录条数从20到1000
set autowrite "自动保存
set ignorecase "搜索忽略大小写
set cmdheight=2 "命令行高度加1
set tabstop=4       " number of visual spaces per TAB
set softtabstop=4   " number of spaces in tab when editing
set shiftwidth=4    " spaces in newline start
set expandtab       " tabs are spaces
set showcmd             " show command in bottom bar
set cursorline          " highlight current line
set commentary "vim-commentary
filetype indent on      " load filetype-specific indent files
set wildmenu            " visual autocomplete for command menu
set timeoutlen=50000      " timeout for key combinations
set backspace=2         " make backspace work like most other apps
set incsearch           " search as characters are entered
set hlsearch            " highlight matches
set ignorecase          " do case insensitive matching
set smartcase           " do smart case matching
set hidden
set sneak
set keep-english-in-normal[-and-restore-in-insert]
" 下面来自 github start

set scrolloff=3
""" Plugins  --------------------------------
set ideamarks
set ideajoin
set surround
set commentary
set easymotion
set textobj-entire

set ReplaceWithRegister
set which-key
set notimeout
set NERDTree
set multiple-cursors
set argtextobj
set exchange
set highlightedyank
set vim-paragraph-motion
set textobj-indent
set matchit
set quickscope






""" Plugin settings -------------------------
let g:argtextobj_pairs="[:],(:),<:>"
""" Common settings -------------------------
set showmode
set so=2
""" Idea specific settings ------------------
set ideajoin
set ideastatusicon=gray
set idearefactormode=keep
" 上面来自 github end
set fillchars+=stl:\ ,stlnc:\
set laststatus=2;
set clipboard=unnamedplus  "X clipboard as unnamed
set clipboard+=unnamed

"
set quickscope
"set qs_highlight_on_keys=['f', 'F', 't', 'T']
let g:qs_highlight_on_keys = ['f', 'F', 't', 'T']
let g:qs_accepted_chars = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9']

"
" :innoremap 补完
"
"
" 退出insert模式, 转到行尾, 输入 ';' 下一行
:inoremap <c-;> <ESC>A;<ESC>
:inoremap <c-a> <ESC>A
:inoremap <c-s> <ESC>la

nnoremap <c-k> 5kzz
nnoremap <c-j> 5jzz
nmap ga '.
nnoremap g' f"
nnoremap g" f'

"格式化代码
noremap <c-l> :action ReformatCode<CR>
:inoremap <c-l> :action ReformatCode<CR>

"关闭其它窗口, 并且把焦点转移到编辑器窗口
nnoremap <c-'> :action HideAllWindows<CR>

" 在输入状态下, 补完剩下的{}
:inoremap <c-o> <ESC>A {
" 在输入状态下, 补完 = null;
":inoremap <c-k> <space>= null;<ESC>

" 复制单个单词到寄存器a并标记到o (使用快捷键 空格+y)
nnoremap <Leader>y mo"+yiw"ayiw
" 剪切单个单词到寄存器a并标记到o (使用快捷键 空格+x)
nnoremap <Leader>x mo"+yiw"ayiwdiw
" 删除单个字符串并黏贴寄存器a的内容并来回标记o和p  (使用快捷键 空格+v)
" 注释：（mp => 标记p）,(viw => 选中当前单词),（"a => 寄存器a）,(p => 将寄存器a内容黏贴到选中的单词),（'o => 跳回标记o）,('p =>跳回标记p[标记为的是使用''来回跳标记])
nnoremap <Leader>v mpviw"ap'o'p
" 按 <leader>2 执行上一次的宏
nnoremap <leader>2 @@
"
noremap <Leader>m :action SelectIn<CR>
"复制action id
nnoremap <Leader>vf :action VimFindActionIdAction<CR>
"
nnoremap <Leader><Leader> :action <CR>



"marks
"<action>ShowBookmarks<CR>
"
nnoremap dq di"
nnoremap dc di(
nnoremap ds di{

nnoremap vq vi"
nnoremap vc vi(
nnoremap vs vi{

nnoremap cq ci"
nnoremap cc ci(
nnoremap cs ci{

nnoremap yq yi"
nnoremap yc yi(
nnoremap ys yi{
"
nnoremap ma mA
nnoremap mb mB
nnoremap mc mC
nnoremap md mD
nnoremap me mE
nnoremap mf mF
nnoremap mg mG
nnoremap mh mH
nnoremap mi mI
nnoremap mj mJ
nnoremap mk mK
nnoremap ml mL
nnoremap mm mM
nnoremap mn mN
nnoremap mo mO
nnoremap mp mP
nnoremap mq mQ
nnoremap mr mR
nnoremap ms mS
nnoremap mt mT
nnoremap mu mU
nnoremap mv mV
nnoremap mw mW
nnoremap mx mX
nnoremap my mY
nnoremap mz mZ

nnoremap `a `A
nnoremap `b `B
nnoremap `c `C
nnoremap `d `D
nnoremap `e `E
nnoremap `f `F
nnoremap `g `G
nnoremap `h `H
nnoremap `i `I
nnoremap `j `J
nnoremap `k `K
nnoremap `l `L
nnoremap `m `M
nnoremap `n `N
nnoremap `o `O
nnoremap `p `P
nnoremap `q `Q
nnoremap `r `R
nnoremap `s `S
nnoremap `t `T
nnoremap `u `U
nnoremap `v `V
nnoremap `w `W
nnoremap `x `X
nnoremap `y `Y
nnoremap `z `Z


" 断点
" 切换断点
noremap zs :ToggleLineBreakpoint<CR>

noremap zf :actionlist
"noremap zr :action RunClass<CR>
noremap zd :action DebugClass<CR>
noremap zr :action Debug<CR>
nnoremap <C-x> <C-x> :action Debug<CR>

nnoremap <C-f> :action StepOver<CR>
nnoremap <C-g> :action StepInto<CR>

noremap zv :action VimFindActionIdAction<CR>
noremap zx :action ActivateProjectToolWindow<CR>
noremap zp :action ActivateFavoritesToolWindow<CR>
"noremap zs :action CodotaLeanSearchCrossRefAction<CR>
"noremap zf :action ActivateFavoritesToolWindow<CR>
noremap zi :action SelectInProjectView<CR>
"---- 主菜单 | 插件 Codota查看用例
nnoremap zc :action CodotaLeanSearchCrossRefAction<CR>
nnoremap z; :action ConsoleView.ClearAll<CR>
"map <leader>a <Plug>(easymotion-s)
"map <leader>e <Plug>(easymotion-f)
"nnoremap s <Plug>(easymotion-s)
"nmap s <Plug>(easymotion-s)<CR>
noremap s <Plug>(easymotion-f)
noremap ' <Plug>(easymotion-F)
nmap s <Plug>(easymotion-f)
nmap ' <Plug>(easymotion-F)
"nmap S <Plug>(easymotion-F)
"nmap s <Plug>(easymotion-s)<CR>
"nmap S <Plug>(easymotion-S)<CR>
"nmap s <Plug>(easymotion-prefix)


"map <leader>e <Plug>(easymotion-f)

":set keep-english-in-normal enable auto-switch feature
":set keep-english-in-normal-and-restore-in-insert restore input method when return insert mode.
":set nokeep-english-in-normal-and-restore-in-insert keep auto-switch feature, but doesn't restore input method when return insert mode
":set nokeep-english-in-normal disable auto-switch feature
"来设置,例如
"let keep_input_source_in_normal="com.apple.keylayout.ABC"


"StretchSplitToRight" 窗口向右延伸
"StretchSplitToLeft" 窗口向左延伸

"abcdefghijklmnopqrstuvwxyz
"z d ,
"stretch
"
"
"
"

"--编辑器操作
"---- 编辑器操作 | 减小字体大小
noremap [f :action EditorDecreaseFontSize<CR>
"---- 编辑器操作 | 增大字体大小
noremap ]f :action EditorIncreaseFontSize<CR>
"---- 编辑器操作 | 重置字体大
noremap <leader>efr :action EditorResetFontSize<CR>
"---- 编辑器操作 | 扩展选区
noremap za :action EditorSelectWord<CR>
"---- 编辑器操作 | 排序行
noremap <leader>eo :action EditorSortLines<CR>
"---- 编辑器操作 | 拆分行
noremap <leader>ep :action EditorSplitLine<CR>
"---- 编辑器操作 | 显示用于就地重构的选项弹出窗口
"EditorPaste
"修改单词
"noremap <Leader>ew :action EditorSelectWord<CR>
"*生成get set方法  (使用快捷键 空格+cc)
nnoremap <Leader>gg :action Generate<CR>
"reformatCode"
nnoremap <leader>rd :action ReformatCode<CR><esc>
"--主菜单
"---- 主菜单 | 文件 | 新建
noremap <leader>ne :action NewElement<CR>
"---- 主菜单 | 导航 | 下一个 Emmet
noremap <leader>en :action EmmetNextEditPoint<CR>
"---- 主菜单 | 导航 | 上一个 Emmet 编辑点
noremap <leader>ep :action EmmetPreviousEditPoint<CR>
"代码折叠"
noremap <leader><leader>[ :action CollapseRegion<CR>
"代码展开"
noremap <leader><leader>] :action ExpandRegion<CR>

noremap <leader><leader>h :action Back<CR>
noremap <leader><leader>l :action Forward<CR>

"---- 主菜单 | 代码 | 重写方法…
noremap <leader>mo :action OverrideMethods<CR>
"---- 主菜单 | 代码 | 实现方法
noremap <leader>mi :action ImplementMethods<CR>
"---- 主菜单 | 代码 | 委托方法...
noremap <leader>md :action DelegateMethods<CR>
"---- 主菜单 | 代码 | 生成…构造 方法
noremap <leader>mc :action GenerateConstructor<CR>
"---- 主菜单 | 代码 | 生成… getter和Setter"方法
noremap <leader>mg :action GenerateGetterAndSetter<CR>
"---- 主菜单 | 代码 | 生成…Equals方法
noremap <leader>me :action GenerateEquals<CR>
"---- 主菜单 | 代码 | 生成…toString方法
noremap <leader>ms :action Actions.ActionsPlugin.GenerateToString<CR>
"---- 主菜单 | 代码 | 生成生成文档注释…
noremap <leader>md :action FixDocComment<CR>
"---- 主菜单 | 代码 | 代码补全
"control+space
"---- 主菜单 | 代码 |  智能代码补全
"noremap <leader> :action SmartTypeCompletion
""
"---- 主菜单 | 代码 | 插入实时模板…
noremap <leader>di :action InsertLiveTemplate<CR>
"**** 主菜单 | 代码 | 环绕方式…
noremap <leader>dd :action SurroundWith<CR>
"---- 主菜单 | 代码 | 解包/移除…
noremap <leader>du :action Unwrap<CR>
"---- 主菜单 | 重构
noremap <leader>rm :action RefactoringMenu<CR>
"---- 主菜单 | 重构 | 重构此…
noremap <leader>rc :action Refactorings.QuickListPopupAction<CR>
"---- 主菜单 | 重构 | 重命名…
noremap <Leader>rn :action RenameElement<CR>
"---- 主菜单 | 重构 | 重命名文件…
noremap <Leader>rf :action RenameFile<CR>
"---- 主菜单 | 重构 | 提取/引入 ？？？？？？？？？？？？？？？？？？？？？？？？？？？？
"引入变量
noremap <leader>iv :action IntroduceVariable<CR>
"引入常量
noremap <leader>ic :action IntroduceConstant<CR>
"引入字段
noremap <leader>if :action IntroduceField<CR>
"引入参数
noremap <leader>ip :action IntroduceParameter<CR>
"引入功能参数
noremap <leader>ir :action IntroduceFunctionalParameter<CR>
"引入函数变量
noremap <leader>ie :action IntroduceFunctionalVariable<CR>
"类型参数
noremap <leader>it :action IntroduceTypeParameter<CR>
"引入参数类型
noremap <leader>io :action IntroduceParameterObject<CR>
"提取方法
noremap <leader>em :action ExtractMethod<CR>
"提取委托
noremap <leader>ec :action ExtractClass<CR>
"提取接口
noremap <leader>ei :action ExtractInterface<CR>
"提取超类
noremap <leader>es :action ExtractSuperclass<CR>
"---- 主菜单 | 构建 | 重新构建
noremap <leader>rb :action Groovy.CheckResources.Rebuild<CR>
"---- 主菜单 | 运行

"打断点
nnoremap <Leader>bb :action ToggleLineBreakpoint<CR>
"查看所有断点
nnoremap <Leader>bv :action ViewBreakpoints<CR>
"---- 主菜单 | 工具 | 保存为实时模板…
noremap <leader>st :action SaveAsTemplate<CR>
"---- 主菜单 | 窗口 | 最小化
"---- 主菜单 | 窗口 | 缩放
"---- 主菜单 | 窗口 | 活动工具窗口
"---- 主菜单 | 窗口 | 活动工具窗口 | 隐藏活动工具窗口
"nnoremap <Leader>ha :action HideAllWindows<CR>
"关闭活动显示板
"nnoremap <Leader>tc :action CloseActiveTab<CR>
"---- 主菜单 | 窗口 | 活动工具窗口 | 隐藏所有工具窗口
"---- 主菜单 | 窗口 | 活动工具窗口 | 视图模式
"---- 主菜单 | 窗口 | 活动工具窗口 | 调整大小
"---- 主菜单 | 窗口 | 活动工具窗口 | 调整大小 | 延伸至左侧
"---- 主菜单 | 窗口 | 活动工具窗口 | 调整大小 | 延伸至右侧
"---- 主菜单 | 窗口 | 活动工具窗口 | 调整大小 | 延伸至顶部
"---- 主菜单 | 窗口 | 活动工具窗口 | 调整大小 | 延伸至底部
"---- 主菜单 | 视图 | 外观 | 退出免打扰模式
"map <leader>z <Action>(ToggleDistractionFreeMode)
"激活maven窗口 showmaven
nnoremap <Leader>sm :action ActivateMavenProjectsToolWindow<CR>
"显示文件结构
noremap <leader>sf :action FileStructurePopup<CR>
"显示当前文件路径
nnoremap <Leader>sp :action ShowFilePath<CR>
"显示用法
nnoremap <Leader>su :action ShowUsages<CR>
"查找用法
nnoremap <Leader>fu :action FindUsages<CR>
"显示结构
nnoremap <leader>ss :action ActivateStructureToolWindow<CR>
"显示actionlist
nnoremap <leader>sa :action actionlist<CR>
"显示书签
nnoremap <leader>sb :action showBookmarks<CR>
"显示 错误描述
nnoremap <leader>se :action showErrorDescription<CR>
"searc every where
nnoremap <Leader>se :action SearchEverywhere<CR>
"quick java doc show java doc
nnoremap <leader>sd :action QuickJavaDoc<CR>

"--工具窗口
"---- 工具窗口 | 提交
"---- 工具窗口 | 查找
"nnoremap <leader>3 :action ActivateFindToolWindow<CR>
"---- 工具窗口 | 运行
nnoremap <leader>4 :action ActivateRunToolWindow<CR>
"---- 工具窗口 | 调试
nnoremap <leader>5 :action ActivateDebugToolWindow<CR>
"---- 工具窗口 | 问题
"nnoremap <leader>6 :action ActivateProblemsViewToolWindow<CR>
"---- 工具窗口 | 结构
"nnoremap <leader>7 :action ActivateStructureToolWindow<CR>
"noremap <leader>ss :action ActivateStructureToolWindow<CR>
"---- 工具窗口 | 服务
"nnoremap <leader>8 :action ActivateStructureToolWindow<CR>
"---- 工具窗口 | Version Control
"---- 工具窗口 | Ant
"---- 工具窗口 | 构建
"---- 工具窗口 | Codota
"---- 工具窗口 | 数据库
"nnoremap <leader>sd :action ActivateDatabaseToolWindow<CR>
"---- 工具窗口 | 收藏夹
noremap <leader>sv :action ActivateFavoritesToolWindow<CR>
"---- 工具窗口 | 层次结构
noremap <leader>sh :action ActivateHierarchyToolWindow<CR>
"---- 工具窗口 | Maven
"noremap <leader>sm :action ActivateMavenToolWindow<CR>
"---- 工具窗口 | 分析器
"=noremap <leader>sp :action ActivateProfilerToolWindow<CR>
"---- 工具窗口 | 项
nnoremap <leader>1 :action ActivateProjectToolWindow<CR>
"---- 工具窗口 | 终端
"ActivateTerminalToolWindow "control + esc
"---- 工具窗口 | Space 自动化
"---- 工具窗口 | Space 代码审查
"---- 工具窗口 | Spring
noremap <leader>sg :action ActivateSpringToolWindow<CR>
"---- 工具窗口 | TODO
noremap <leader>so :action ActivateTODOToolWindow<CR>
"---- 工具窗口 | ShowUmlDiagram
noremap <leader>sj :action ShowUmlDiagram<CR>

"--外部工具
"---- 外部构建系统 | 重新加载所有 External 项目
"---- 外部构建系统 | 重新加载 External 项目
"---- 外部构建系统 | 运行任务
"---- 调试器操作 | 添加到监视
"---- 调试器操作 | 添加内联监视
"---- 调试器操作 | 设置值…
"---- 调试器操作 | 与剪贴板比较值
"---- 调试器操作 | 复制名称
"---- 调试器操作 | 检查…
"---- 调试器操作 | 在控制台中评估
"---- 调试器操作 | 新建监视…
"---- 调试器操作 | 在变量选项卡中显示监视
"---- 调试器操作 | 移除所有监视
"---- 调试器操作 | 跳转到对象源
"--版本控制
"--外部构建
"--远程外部工具
"--调试器工具

"--插件
"---- 插件 | AceJump | Activate / Cycle AceJump Mode
"---- 插件 | AceJump | Start AceJump in All Line Marks Mode
"---- 插件 | AceJump | Start AceJump in Target Mode
"---- 插件 | Action Tools
"---- 插件 | Codota AI Autocomplete for Java and JavaScript
"---- 插件 | Codota AI Autocomplete for Java and JavaScript | Codota Search...
"---- 插件 | Codota AI Autocomplete for Java and JavaScript | Copy
"---- 插件 | Codota AI Autocomplete for Java and JavaScript | Get relevant examples
"---- 插件 | Codota AI Autocomplete for Java and JavaScript | Get relevant examples
"---- 插件 | Codota AI Autocomplete for Java and JavaScript | Learn Project Code
"---- 插件 | Diagrams
"---- 插件 | Docker
"---- 插件 | Free MyBatis plugin | mybatis-generator
"---- 插件 | IdeaVim | IdeaVim: Track Action Ids
"---- 插件 | IdeaVim | Shortcuts
"---- 插件 | IdeaVim | Vim Actions
"---- 插件 | IdeaVim | Vim Emulator
"---- 插件 | Maven | 运行 Maven 构建
"---- 插件 | Maven | 重新加载所有 Maven 项目
"---- 插件 | Maven | 重新加载项目
"--导航
"---- 主菜单 | 导航
"---- 主菜单 | 导航 | 后退
"---- 主菜单 | 导航 | 前进
"---- 主菜单 | 导航 | 随处搜索
"tab + f"
"转到下一个可以写参数的地方
noremap gx f"


nnoremap gf f(
"nnoremap gk F(


"---- 主菜单 | 导航 | 转到类...
"---- 主菜单 | 导航 | 前进
noremap <c-i> :action Forward<CR>
"---- 主菜单 | 导航 | 后退
noremap <c-o> :action Back<CR>
"GotoClass"
"---- 主菜单 | 导航 | 转到文件...
"nnoremap gf :action GotoFile<CR>
"---- 主菜单 | 导航 | 转到符号...
noremap gy :action GotoSymbol<CR>
"---- 主菜单 | 导航 | 转到行:列…
"noremap gl :action GotoLine<CR>
"---- 主菜单 | 导航 | 转到 URL 映射…
"noremap gu :action GotoUrlAction<CR>
"---- 主菜单 | 导航 | 下一个高亮显示错误
noremap ]o :action GotoNextError<CR>
"---- 主菜单 | 导航 | 上一个高亮显示错误
noremap [o :action GotoPreviousError<CR>
"---- 主菜单 | 导航 | 下一个 Emmet 编辑点
noremap ]e :action EmmetNextEditPoint<CR>
"---- 主菜单 | 导航 | 上一个 Emmet 编辑点
noremap [e :action EmmetPreviousEditPoint<CR>
"---- 主菜单 | 导航 | 下一个 方法
noremap ]] :action MethodDown<CR>
"---- 主菜单 | 导航 | 上一个 方法
noremap [[ :action MethodUp<CR>
"---- 主菜单 | 导航 | 最后编辑位置
noremap gl :action JumpToLastChange<CR>
"---- 主菜单 | 导航 | 下一个编辑位置
"---- 主菜单 | 导航 | 前往声明或用法
nnoremap gd :action GotoDeclaration<CR>
"---- 主菜单 | 导航 | 转到实现
nnoremap gi :action GotoImplementation<CR>
"---- 主菜单 | 导航 | 转到类型声明
noremap gp :action GotoTypeDeclaration<CR>
"---- 主菜单 | 导航 | 转到 Super 方法
nnoremap gs :action GotoSuperMethod<CR>
"---- 主菜单 | 导航 | 转到测试
nnoremap gt :action GotoTest<CR>
"---- 主菜单 | 导航 | 相关文件…
noremap gr :action GotoRelated<CR>
"---- 主菜单 | 导航 | 文件结构
noremap gs :action FileStructurePopup<CR>

nmap ge <action>(GotoNextError)

nmap gm <action>(MethodUp)


"nmap L <action>(NextTab)
"nmap H <action>(PreviousTab)



"---- 主菜单 | 导航 | 文件路径
"---- 主菜单 | 导航 | 类型层次结构
noremap <leader>ht :action TypeHierarchy<CR>
"---- 主菜单 | 导航 | 方法层次结构
noremap <leader>hm :action MethodHierarchy<CR>
"---- 主菜单 | 导航 | 调用层次结构
noremap <leader>hc :action CallHierarchy<CR>

"---- 主菜单 | 导航 | 上一个匹配项
noremap <leader>fp :action FindPrevious<CR>
"---- 主菜单 | 导航 | 下一个匹配项
noremap <leader>fn :action FindNext<CR>
"---- 菜单 | 导航 | 转到类...
"GotoClass"
nnoremap gc :action GotoClass<CR>
"--标记
"--其它
"---- 其他 | 树操作
"---- 其他 | 树操作 | 选择父节点
"---- 其他 | 树操作 | 选择下一个同级节点
"---- 其他 | 树操作 | 选择上一个同级节点
"---- 其他 | 滚动
"向下滚动页面"
"noremap <leader>sd :action ScrollPane-scrollDown<CR>
"向上滚动页面"
"noremap <leader>sp :action ScrollPane-scrollUp<CR>
"向下滚动"
"ScrollPane-unitScrollDown<CR>
"向上滚动"
"ScrollPane-unitScrollUp<CR>

"---- 其他 | 切换器(RecentFiles)操作
"切换器"
noremap <leader>sw :action Switcher<CR>
"最近文件"
noremap <leader>rs :action RecentFiles<CR>
"最近更改文件"
noremap <leader>rg :action RecentChangedFiles<CR>
"---- 其他 | 文件选择器
"---- 其他 | 文件选择器 | 主目录
"---- 其他 | 文件选择器 | 项目目录
"---- 其他 | 文件选择器 | 显示快速列表
"---- 其他 | 制表符 | 在多编辑器文件中选择下一个选项卡
"---- 其他 | 制表符 | 在多编辑器文件中选择上一个选项卡
"---- 其他 | 工具窗口视图模式
"---- 其他 | 书签
"添加助记书签"
noremap <leader>mm :action ToggleBookmarkWithMnemonic<CR>
"显示书签"
"noremap <leader>sb :action ShowBookmarks<CR>
"---- 其他 | 用法视图分组
"---- 其他 | 使用 Emmet 更新标记
noremap <leader>eu :action EmmetUpdateTag<CR>
"---- 其他 | 复制 URL
noremap <leader>cu :action CopyTBXReference<CR>
"---- 其他 | 子类型层次结构
"---- 其他 | 完全展开树节点
"---- 其他 | 展开树节点
"---- 其他 | 折叠树节点
"---- 其他 | 折叠组件
"---- 其他 | 搜索历史记录
"**** 其他 | 显示上下文操作 (option + 回车)
noremap <leader>sa :action ShowIntentionActions<CR>
"---- 其他 | 显示快速操作弹出窗口
noremap <leader>si :action ShowIntentionActions<CR>
"---- 其他 | 显示服务树
"---- 其他 | 添加到收藏夹
noremap <leader>af :action AddToFavoritesPopup<CR>
"---- 其他 | 添加新收藏夹列表
noremap <leader>an :action AddNewFavoritesList<CR>
"---- 其他 | 用 Emmet 环绕
noremap <leader>er :action SurroundWithEmmet<CR>
"---- 其他 | 类层次结构
"---- 主菜单 | 帮助 | 查找操作…
nnoremap <Leader>ga :action GotoAction<CR>

"---- 插件 Maven Rebuild
"nnoremap <Leader>zm :action Maven.RunBuild<CR>

"nnoremap <c-l> <c-w>l
"nnoremap <c-j> <c-w>j
"nnoremap <c-h> <c-w>h
"nnoremap <c-k> <c-w>k

nnoremap <C-S-k> :action ShowUsages<cr>
nnoremap <C-S-u> :action HighlightUsagesInFile<cr>

"Maven.RunBuild
nnoremap <Leader>rv :action Maven.RunBuild<CR>

" String Mainpu
nmap <leader>sc <action>(StringManipulation.ToSnakeCaseOrCamelCase)<CR>
"

" d: diff
nmap <leader>dd <action>(Vcs.ShowTabbedFileHistory)

" f: Find/Format ⭐️
"let g:WhichKeyDesc_FindOrFormat = "<leader>f FindOrFormat"
"let g:WhichKeyDesc_FindOrFormat_FindFile = "<leader>ff FindFile"
nmap <leader>ff <action>(GotoFile)

"let g:WhichKeyDesc_FindOrFormat_FindFileLocation = "<leader>fl FindFileLocation"
nmap <leader>fl <action>(SelectInProjectView)

"let g:WhichKeyDesc_FindOrFormat_FindText = "<leader>ft FindText"
nmap <leader>ft <action>(FindInPath)

"let g:WhichKeyDesc_FindOrFormat_Commands = "<leader>fc Commands"
nmap <leader>fc <action>(GotoAction)

"let g:WhichKeyDesc_FindOrFormat_OpenedProject = "<leader>fp OpenedProject"
nmap <leader>fp <action>(OpenProjectWindows)

"let g:WhichKeyDesc_FindOrFormat_Format = "<leader>fm Format"
nmap <leader>fm <action>(ReformatCode) \| <action>(OptimizeImports)

" g: Git ⭐️
"let g:WhichKeyDesc_Git = "<leader>g Git"
"let g:WhichKeyDesc_Git_RollbackHunk = "<leader>gr RollbackHunk"
nmap <leader>gr :action Vcs.RollbackChangedLines<CR>

" i: Insert ⭐️
"let g:WhichKeyDesc_InsertAfterBrackets = "<leader>i InsertAfterBrackets"

" j: add Semicolon and goto nextline⭐️
"let g:WhichKeyDesc_InsertSemicolon = "<leader>j InsertSemicolon"

" l: lsp: Language server protocol (align with neovim)⭐️
"let g:WhichKeyDesc_LSP = "<leader>l LSP"
"let g:WhichKeyDesc_LSP_Rename = "<leader>lr Rename"
nmap <leader>lr <action>(RenameElement)



nmap"let g:WhichKeyDesc_No_Highlight = "<leader>nl NoHighlight"
nmap <leader>nl :nohlsearch<CR>



"let g:WhichKeyDesc_Show = "<leader>s Show"
"let g:WhichKeyDesc_Show_FileStructure = "<leader>ss ShowFileStructure"
nmap <leader>ss <action>(FileStructurePopup)
"let g:WhichKeyDesc_Show_Bookmarks = "<leader>sb ShowBookmarks"
nmap <leader>sb <action>(ShowBookmarks)
"let g:WhichKeyDesc_Show_ParameterInfo = "<leader>sb ShowParameterInfo"
nmap <leader>sp <action>(ParameterInfo)

" r: Run/Re ⭐️
"let g:WhichKeyDesc_RunOrRe = "<leader>r RunOrRe"
"let g:WhichKeyDesc_RunOrRe_ReRun = "<leader>rr ReRun"
nmap <leader>rr <action>(Rerun)
"let g:WhichKeyDesc_RunOrRe_ReRunTests = "<leader>rt ReRunTests"
nmap <leader>rt <action>(RerunTests)

" w: Window ⭐️
"let g:WhichKeyDesc_Windows = "<leader>w Windows"
"let g:WhichKeyDesc_Windows_maximize = "<leader>wo maximize"
nmap <leader>wo <action>(UnsplitAll) \| <action>(HideAllWindows)
"let g:WhichKeyDesc_Windows_splitWindowVertically = "<leader>wl splitWindowVertically"
nmap <leader>wl <action>(Macro.SplitVertically)
"let g:WhichKeyDesc_Windows_closeActiveWindow = "<leader>wc closeActiveWindow"
nmap <leader>wc <c-w>c

" z: zip(fold) ⭐️
"let g:WhichKeyDesc_Zip = "<leader>z Zip"
"let g:WhichKeyDesc_Zip_unZipAll = "<leader>zo unZipAll"
nmap <leader>zo <action>(ExpandAllRegions)
"let g:WhichKeyDesc_Zip_ZipAll = "<leader>zc ZipAll"
nmap <leader>zc <action>(CollapseAllRegions)

"nmap <leader>c :q!<CR>

" e: Extract
" extract method/function
vmap <leader>em <action>(ExtractMethod)
" extract constant
vmap <leader>ec <action>(IntroduceConstant)
" extract field
vmap <leader>ef <action>(IntroduceField)
" extract variable
vmap <leader>ev <action>(IntroduceVariable)

